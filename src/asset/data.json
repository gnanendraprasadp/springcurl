[
  {
    "id": "activemq",
    "description": "Spring JMS support with Apache ActiveMQ 'Classic'.",
    "required_version": ">=2.0.0.RELEASE and <3.0.0-M1"
  },
  {
    "id": "actuator",
    "description": "Supports built in (or custom) endpoints that let you monitor and manage your application - such as application health, metrics, sessions, etc."
  },
  {
    "id": "amqp",
    "description": "Gives your applications a common platform to send and receive messages, and your messages a safe place to live until received."
  },
  {
    "id": "artemis",
    "description": "Spring JMS support with Apache ActiveMQ Artemis."
  },
  {
    "id": "azure-active-directory",
    "description": "Spring Security integration with Azure Active Directory for authentication.",
    "required_version": ">=2.5.0-M1 and <3.1.0-M1"
  },
  {
    "id": "azure-cosmos-db",
    "description": "Fully managed NoSQL database service for modern app development, including Spring Data support.",
    "required_version": ">=2.5.0-M1 and <3.0.0-M1"
  },
  {
    "id": "azure-keyvault",
    "description": "All key vault features are supported, e.g. manage application secrets and certificates.",
    "required_version": ">=2.5.0-M1 and <3.1.0-M1"
  },
  {
    "id": "azure-storage",
    "description": "All Storage features are supported, e.g. blob, fileshare and queue.",
    "required_version": ">=2.5.0-M1 and <3.1.0-M1"
  },
  {
    "id": "azure-support",
    "description": "Auto-configuration for Azure Services (Service Bus, Storage, Active Directory, Key Vault, and more).",
    "required_version": ">=2.5.0-M1 and <3.1.0-M1"
  },
  {
    "id": "batch",
    "description": "Batch applications with transactions, retry/skip and chunk based processing."
  },
  {
    "id": "cache",
    "description": "Provides cache-related operations, such as the ability to update the content of the cache, but does not provide the actual data store."
  },
  {
    "id": "camel",
    "description": "Apache Camel is an open source integration framework that empowers you to quickly and easily integrate various systems consuming or producing data.",
    "required_version": ">=2.0.0.M1 and <3.0.0-M1"
  },
  {
    "id": "cloud-bus",
    "description": "Links nodes of a distributed system with a lightweight message broker which can used to broadcast state changes or other management instructions (requires a binder, e.g. Apache Kafka or RabbitMQ).",
    "required_version": ">=2.3.0.M1 and <3.1.0-M1"
  },
  {
    "id": "cloud-cloudfoundry-discovery",
    "description": "Service discovery with Cloud Foundry.",
    "required_version": ">=2.3.0.M1 and <3.0.0-M1"
  },
  {
    "id": "cloud-config-client",
    "description": "Client that connects to a Spring Cloud Config Server to fetch the application's configuration.",
    "required_version": ">=2.3.0.M1 and <3.1.0-M1"
  },
  {
    "id": "cloud-config-server",
    "description": "Central management for configuration via Git, SVN, or HashiCorp Vault.",
    "required_version": ">=2.3.0.M1 and <3.1.0-M1"
  },
  {
    "id": "cloud-contract-stub-runner",
    "description": "Stub Runner for HTTP/Messaging based communication. Allows creating WireMock stubs from RestDocs tests.",
    "required_version": ">=2.3.0.M1 and <3.0.0-M1"
  },
  {
    "id": "cloud-contract-verifier",
    "description": "Moves TDD to the level of software architecture by enabling Consumer Driven Contract (CDC) development."
  },
  {
    "id": "cloud-eureka",
    "description": "A REST based service for locating services for the purpose of load balancing and failover of middle-tier servers.",
    "required_version": ">=2.3.0.M1 and <3.1.0-M1"
  },
  {
    "id": "cloud-eureka-server",
    "description": "spring-cloud-netflix Eureka Server.",
    "required_version": ">=2.3.0.M1 and <3.1.0-M1"
  },
  {
    "id": "cloud-feign",
    "description": "Declarative REST Client. OpenFeign creates a dynamic implementation of an interface decorated with JAX-RS or Spring MVC annotations.",
    "required_version": ">=2.3.0.M1 and <3.1.0-M1"
  },
  {
    "id": "cloud-function",
    "description": "Promotes the implementation of business logic via functions and supports a uniform programming model across serverless providers, as well as the ability to run standalone (locally or in a PaaS).",
    "required_version": ">=2.3.0.M1 and <3.1.0-M1"
  },
  {
    "id": "cloud-gateway",
    "description": "Provides a simple, yet effective way to route to APIs and provide cross cutting concerns to them such as security, monitoring/metrics, and resiliency.",
    "required_version": ">=2.3.0.M1 and <3.1.0-M1"
  },
  {
    "id": "cloud-gcp",
    "description": "Contains auto-configuration support for every Spring Cloud GCP integration. Most of the auto-configuration code is only enabled if other dependencies are added to the classpath.",
    "required_version": ">=2.4.0-M1 and <3.0.0-M1"
  },
  {
    "id": "cloud-gcp-pubsub",
    "description": "Adds the GCP Support entry and all the required dependencies so that the Google Cloud Pub/Sub integration work out of the box.",
    "required_version": ">=2.4.0-M1 and <3.0.0-M1"
  },
  {
    "id": "cloud-gcp-storage",
    "description": "Adds the GCP Support entry and all the required dependencies so that the Google Cloud Pub/Sub integration work out of the box.",
    "required_version": ">=2.4.0-M1 and <3.0.0-M1"
  },
  {
    "id": "cloud-loadbalancer",
    "description": "Client-side load-balancing with Spring Cloud LoadBalancer.",
    "required_version": ">=2.3.0.M1 and <3.1.0-M1"
  },
  {
    "id": "cloud-resilience4j",
    "description": "Spring Cloud Circuit breaker with Resilience4j as the underlying implementation.",
    "required_version": ">=2.3.0.M1 and <3.1.0-M1"
  },
  {
    "id": "cloud-starter",
    "description": "Non-specific Spring Cloud features, unrelated to external libraries or integrations (e.g. Bootstrap context and @RefreshScope).",
    "required_version": ">=2.3.0.M1 and <3.1.0-M1"
  },
  {
    "id": "cloud-starter-consul-config",
    "description": "Enable and configure the common patterns inside your application and build large distributed systems with Hashicorp's Consul. The patterns provided include Service Discovery, Distributed Configuration and Control Bus.",
    "required_version": ">=2.3.0.M1 and <3.1.0-M1"
  },
  {
    "id": "cloud-starter-consul-discovery",
    "description": "Service discovery with Hashicorp Consul.",
    "required_version": ">=2.3.0.M1 and <3.1.0-M1"
  },
  {
    "id": "cloud-starter-vault-config",
    "description": "Provides client-side support for externalized configuration in a distributed system. Using HashiCorp's Vault you have a central place to manage external secret properties for applications across all environments.",
    "required_version": ">=2.3.0.M1 and <3.1.0-M1"
  },
  {
    "id": "cloud-starter-zookeeper-config",
    "description": "Enable and configure common patterns inside your application and build large distributed systems with Apache Zookeeper based components. The provided patterns include Service Discovery and Configuration.",
    "required_version": ">=2.3.0.M1 and <3.1.0-M1"
  },
  {
    "id": "cloud-starter-zookeeper-discovery",
    "description": "Service discovery with Apache Zookeeper.",
    "required_version": ">=2.3.0.M1 and <3.1.0-M1"
  },
  {
    "id": "cloud-stream",
    "description": "Framework for building highly scalable event-driven microservices connected with shared messaging systems (requires a binder, e.g. Apache Kafka, RabbitMQ or Solace PubSub+).",
    "required_version": ">=2.3.0.M1 and <3.1.0-M1"
  },
  {
    "id": "cloud-task",
    "description": "Allows a user to develop and run short lived microservices using Spring Cloud. Run them locally, in the cloud, and on Spring Cloud Data Flow.",
    "required_version": ">=2.3.0.M1 and <3.1.0-M1"
  },
  {
    "id": "codecentric-spring-boot-admin-client",
    "description": "Required for your application to register with a Codecentric's Spring Boot Admin Server instance.",
    "required_version": ">=2.0.0.RELEASE and <3.1.0-M1"
  },
  {
    "id": "codecentric-spring-boot-admin-server",
    "description": "A community project to manage and monitor your Spring Boot applications. Provides a UI on top of the Spring Boot Actuator endpoints.",
    "required_version": ">=2.0.0.RELEASE and <3.1.0-M1"
  },
  {
    "id": "configuration-processor",
    "description": "Generate metadata for developers to offer contextual help and code completion when working with custom configuration keys (ex.application.properties/.yml files)."
  },
  {
    "id": "data-cassandra",
    "description": "A free and open-source, distributed, NoSQL database management system that offers high-scalability and high-performance."
  },
  {
    "id": "data-cassandra-reactive",
    "description": "Access Cassandra NoSQL Database in a reactive fashion."
  },
  {
    "id": "data-couchbase",
    "description": "NoSQL document-oriented database that offers in memory-first architecture, geo-distributed deployments, and workload isolation."
  },
  {
    "id": "data-couchbase-reactive",
    "description": "Access Couchbase NoSQL database in a reactive fashion with Spring Data Couchbase."
  },
  {
    "id": "data-elasticsearch",
    "description": "A distributed, RESTful search and analytics engine with Spring Data Elasticsearch."
  },
  {
    "id": "data-jdbc",
    "description": "Persist data in SQL stores with plain JDBC using Spring Data."
  },
  {
    "id": "data-jpa",
    "description": "Persist data in SQL stores with Java Persistence API using Spring Data and Hibernate."
  },
  {
    "id": "data-ldap",
    "description": "Makes it easier to build Spring based applications that use the Lightweight Directory Access Protocol."
  },
  {
    "id": "data-mongodb",
    "description": "Store data in flexible, JSON-like documents, meaning fields can vary from document to document and data structure can be changed over time."
  },
  {
    "id": "data-mongodb-reactive",
    "description": "Provides asynchronous stream processing with non-blocking back pressure for MongoDB."
  },
  {
    "id": "data-neo4j",
    "description": "An open source NoSQL database that stores data structured as graphs consisting of nodes, connected by relationships."
  },
  {
    "id": "data-r2dbc",
    "description": "Provides Reactive Relational Database Connectivity to persist data in SQL stores using Spring Data in reactive applications."
  },
  {
    "id": "data-redis",
    "description": "Advanced and thread-safe Java Redis client for synchronous, asynchronous, and reactive usage. Supports Cluster, Sentinel, Pipelining, Auto-Reconnect, Codecs and much more."
  },
  {
    "id": "data-redis-reactive",
    "description": "Access Redis key-value data stores in a reactive fashion with Spring Data Redis."
  },
  {
    "id": "data-rest",
    "description": "Exposing Spring Data repositories over REST via Spring Data REST."
  },
  {
    "id": "data-rest-explorer",
    "description": "Browsing Spring Data REST repositories in your browser."
  },
  {
    "id": "datadog",
    "description": "Publish Micrometer metrics to Datadog, a dimensional time-series SaaS with built-in dashboarding and alerting."
  },
  {
    "id": "db2",
    "description": "A JDBC driver that provides access to IBM DB2.",
    "required_version": ">=2.2.0.M6"
  },
  {
    "id": "derby",
    "description": "An open source relational database implemented entirely in Java."
  },
  {
    "id": "devtools",
    "description": "Provides fast application restarts, LiveReload, and configurations for enhanced development experience."
  },
  {
    "id": "distributed-tracing",
    "description": "Enable span and trace IDs in logs."
  },
  {
    "id": "flapdoodle-mongo",
    "description": "Provides a platform neutral way for running MongoDB in unit tests.",
    "required_version": ">=2.0.0.RELEASE and <3.0.0-M1"
  },
  {
    "id": "flyway",
    "description": "Version control for your database so you can migrate from any version (incl. an empty database) to the latest version of the schema."
  },
  {
    "id": "freemarker",
    "description": "Java library to generate text output (HTML web pages, e-mails, configuration files, source code, etc.) based on templates and changing data."
  },
  {
    "id": "graphite",
    "description": "Publish Micrometer metrics to Graphite, a hierarchical metrics system backed by a fixed-size database."
  },
  {
    "id": "graphql",
    "description": "Build GraphQL applications with Spring for GraphQL and GraphQL Java.",
    "required_version": ">=2.7.0.M1"
  },
  {
    "id": "groovy-templates",
    "description": "Groovy templating engine."
  },
  {
    "id": "h2",
    "description": "Provides a fast in-memory database that supports JDBC API and R2DBC access, with a small (2mb) footprint. Supports embedded and server modes as well as a browser based console application."
  },
  {
    "id": "hateoas",
    "description": "Eases the creation of RESTful APIs that follow the HATEOAS principle when working with Spring / Spring MVC."
  },
  {
    "id": "hsql",
    "description": "Lightweight 100% Java SQL Database Engine."
  },
  {
    "id": "influx",
    "description": "Publish Micrometer metrics to InfluxDB, a dimensional time-series server that support real-time stream processing of data."
  },
  {
    "id": "integration",
    "description": "Adds support for Enterprise Integration Patterns. Enables lightweight messaging and supports integration with external systems via declarative adapters."
  },
  {
    "id": "jdbc",
    "description": "Database Connectivity API that defines how a client may connect and query a database."
  },
  {
    "id": "jersey",
    "description": "Framework for developing RESTful Web Services in Java that provides support for JAX-RS APIs."
  },
  {
    "id": "jooq",
    "description": "Generate Java code from your database and build type safe SQL queries through a fluent API."
  },
  {
    "id": "kafka",
    "description": "Publish, subscribe, store, and process streams of records."
  },
  {
    "id": "kafka-streams",
    "description": "Building stream processing applications with Apache Kafka Streams."
  },
  {
    "id": "liquibase",
    "description": "Liquibase database migration and source control library."
  },
  {
    "id": "lombok",
    "description": "Java annotation library which helps to reduce boilerplate code."
  },
  {
    "id": "mail",
    "description": "Send email using Java Mail and Spring Framework's JavaMailSender."
  },
  {
    "id": "mariadb",
    "description": "MariaDB JDBC and R2DBC driver."
  },
  {
    "id": "mustache",
    "description": "Logic-less Templates. There are no if statements, else clauses, or for loops. Instead there are only tags."
  },
  {
    "id": "mybatis",
    "description": "Persistence framework with support for custom SQL, stored procedures and advanced mappings. MyBatis couples objects with stored procedures or SQL statements using a XML descriptor or annotations.",
    "required_version": ">=2.0.0.RELEASE and <3.1.0-M1"
  },
  {
    "id": "mysql",
    "description": "MySQL JDBC and R2DBC driver."
  },
  {
    "id": "native",
    "description": "Support for compiling Spring applications to native executables using the GraalVM native-image compiler.",
    "required_version": ">=2.4.3"
  },
  {
    "id": "new-relic",
    "description": "Publish Micrometer metrics to New Relic, a SaaS offering with a full UI and a query language called NRQL."
  },
  {
    "id": "oauth2-client",
    "description": "Spring Boot integration for Spring Security's OAuth2/OpenID Connect client features."
  },
  {
    "id": "oauth2-resource-server",
    "description": "Spring Boot integration for Spring Security's OAuth2 resource server features.",
    "required_version": ">=2.1.0.M2"
  },
  {
    "id": "okta",
    "description": "Okta specific configuration for Spring Security/Spring Boot OAuth2 features. Enable your Spring Boot application to work with Okta via OAuth 2.0/OIDC.",
    "required_version": ">=2.1.2.RELEASE and <3.0.0-M1"
  },
  {
    "id": "open-service-broker",
    "description": "Framework for building Spring Boot apps that implement the Open Service Broker API, which can deliver services to applications running within cloud native platforms such as Cloud Foundry, Kubernetes and OpenShift.",
    "required_version": ">=2.0.0.RELEASE and <2.7.0-M1"
  },
  {
    "id": "oracle",
    "description": "A JDBC driver that provides access to Oracle."
  },
  {
    "id": "picocli",
    "description": "Build command line applications with picocli.",
    "required_version": ">=2.5.0.RELEASE and <3.1.0-M1"
  },
  {
    "id": "postgresql",
    "description": "A JDBC and R2DBC driver that allows Java programs to connect to a PostgreSQL database using standard, database independent Java code."
  },
  {
    "id": "prometheus",
    "description": "Expose Micrometer metrics in Prometheus format, an in-memory dimensional time series database with a simple built-in UI, a custom query language, and math operations."
  },
  {
    "id": "quartz",
    "description": "Schedule jobs using Quartz."
  },
  {
    "id": "restdocs",
    "description": "Document RESTful services by combining hand-written with Asciidoctor and auto-generated snippets produced with Spring MVC Test."
  },
  {
    "id": "rsocket",
    "description": "RSocket.io applications with Spring Messaging and Netty.",
    "required_version": ">=2.2.0.M2"
  },
  {
    "id": "scs-config-client",
    "description": "Config client on VMware Tanzu Application Service.",
    "required_version": ">=2.0.0.RELEASE and <3.0.0-M1"
  },
  {
    "id": "scs-service-registry",
    "description": "Eureka service discovery client on VMware Tanzu Application Service.",
    "required_version": ">=2.0.0.RELEASE and <3.0.0-M1"
  },
  {
    "id": "security",
    "description": "Highly customizable authentication and access-control framework for Spring applications."
  },
  {
    "id": "session",
    "description": "Provides an API and implementations for managing user session information."
  },
  {
    "id": "solace",
    "description": "Connect to a Solace PubSub+ Advanced Event Broker to publish, subscribe, request/reply and store/replay messages.",
    "required_version": ">=2.2.0.RELEASE and <3.0.0-M1"
  },
  {
    "id": "spring-shell",
    "description": "Build command line applications with spring.",
    "required_version": ">=2.7.0 and <3.1.0-M1"
  },
  {
    "id": "sqlserver",
    "description": "A JDBC and R2DBC driver that provides access to Microsoft SQL Server and Azure SQL Database from any Java application."
  },
  {
    "id": "testcontainers",
    "description": "Provide lightweight, throwaway instances of common databases, Selenium web browsers, or anything else that can run in a Docker container."
  },
  {
    "id": "thymeleaf",
    "description": "A modern server-side Java template engine for both web and standalone environments. Allows HTML to be correctly displayed in browsers and as static prototypes."
  },
  {
    "id": "unboundid-ldap",
    "description": "Provides a platform neutral way for running a LDAP server in unit tests."
  },
  {
    "id": "vaadin",
    "description": "A web framework that allows you to write UI in pure Java without getting bogged down in JS, HTML, and CSS.",
    "required_version": ">=2.0.0.RELEASE and <2.8.0-M1"
  },
  {
    "id": "validation",
    "description": "Bean Validation with Hibernate validator."
  },
  {
    "id": "wavefront",
    "description": "Publish metrics and optionally distributed traces to Tanzu Observability by Wavefront, a SaaS-based metrics monitoring and analytics platform that lets you visualize, query, and alert over data from across your entire stack."
  },
  {
    "id": "web",
    "description": "Build web, including RESTful, applications using Spring MVC. Uses Apache Tomcat as the default embedded container."
  },
  {
    "id": "web-services",
    "description": "Facilitates contract-first SOAP development. Allows for the creation of flexible web services using one of the many ways to manipulate XML payloads."
  },
  {
    "id": "webflux",
    "description": "Build reactive web applications with Spring WebFlux and Netty."
  },
  {
    "id": "websocket",
    "description": "Build WebSocket applications with SockJS and STOMP."
  },
  {
    "id": "zipkin",
    "description": "Enable and expose span and trace IDs to Zipkin."
  }
]
